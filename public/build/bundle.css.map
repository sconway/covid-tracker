{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "DataSourceInfo.svelte",
    "FullCountryStatistics.svelte",
    "IntroInfo.svelte",
    "ShortCountryStatistics.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import * as d3 from \"d3\";\n    import * as THREE from \"THREE\";\n    import * as TWEEN from \"@tweenjs/tween.js\";\n\n    import { onDestroy, onMount } from \"svelte\";\n    import IntroInfo from \"./components/IntroInfo.svelte\"\n    import DataSourceInfo from \"./components/DataSourceInfo.svelte\"\n    import FullCountryStatistics from \"./components/FullCountryStatistics.svelte\"\n    import ShortCountryStatistics from \"./components/ShortCountryStatistics.svelte\"\n    import { fetchCountryData, fetchTotalsData } from \"./api/api\";\n    import { country, countryInfo, isCountryClicked, isCountryHovered } from \"./stores/country.js\";\n    import { isDataPanelActive } from \"./stores/dataPanel.js\"\n    import { overlay } from \"./stores/overlay\"\n    import { listeners } from \"./stores/listeners.js\"\n    import { onCountryHoverOff, unsubscribeCountryClick, unsubscribeOverlay } from \"./globeEventHandlers/globeMouseMove\";\n    import { initScene, emptyScene } from \"./utils/sceneUtils/scene\";\n    import { loadMap } from \"./utils/mapUtils/loadMap\";\n    import { debounce, setCountryImageBack } from \"./utils/utils.js\";\n\n    let camera;\n    let cloud;\n    let countries;\n    let earth;\n    let root;\n    let renderer;\n    let scene;\n    let totals;\n\n    /**\n     * Initializes the scene, renderer, and camera.\n     */\n    const initThreeJSObjects = () => {\n        const canvas = d3\n            .select(\"#three-container\")\n            .append(\"canvas\")\n            .attr(\"width\", window.innerWidth)\n            .attr(\"height\", window.innerHeight);\n\n        canvas.node().getContext(\"webgl\");\n\n        scene = new THREE.Scene();\n        renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            canvas: canvas.node(),\n        });\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\n    };\n\n    /**\n     * Called when the DOM is unmounted. Removes the subscription for handling country clicks.\n     */\n    onDestroy(() => {\n        unsubscribeCountryClick();\n        unsubscribeOverlay();\n    });\n\n    /**\n     * Called when the DOM is first mounted.\n     */\n    onMount(async () => {\n        countries = await fetchCountryData();\n        totals = await fetchTotalsData();\n\n        // Remove the loading screen when the app is fully loaded.\n        const loadingScreen = document.getElementById(\"loadingScreen\");\n        loadingScreen.classList.add(\"active\");\n        \n        // Reset things when the window resizes so mouseover behavior is consistent.\n        window.addEventListener(\"resize\", onWindowResize, false);\n        \n        init();\n    });\n\n    const init = () => {\n        initThreeJSObjects();\n        initScene(scene, renderer, camera);\n        loadMap(scene, renderer, camera);\n        setEarthAndClouds();\n        animate();\n    }\n\n    /**\n     * Loop used for rendering and updating values.\n     */\n    const animate = (time) => {\n        update();\n        renderer.render(scene, camera);\n        requestAnimationFrame(animate);\n    };\n\n    /**\n     * Called by the animation function about 60 times per second. \n     * Updates any values that are used for animation or control.\n     */\n     const update = () => {\n      if (!$isCountryHovered && !$isDataPanelActive) {\n        // update any transitions on existing tweens\n        TWEEN.default.update();\n      }\n    };\n    \n    const getCountryCovidStats = (countryData, property) => {\n        if (countryData && countries && countries.length > 0) {\n            const country = countries.find(country => countryData.countryCode === country.code);\n            return country && country[property] ? country[property] : \"\";\n        }\n\n        return \"\";\n    }\n\n    const setEarthAndClouds = () => {\n        root = scene.getObjectByName(\"root\");\n    };\n\n    /**\n    * Called when the back button is clicked. Updates the shared state, \n    * and sets the globe images back to their original state.\n    */\n    const handleBackButtonClick = () => {\n        isCountryClicked.update((c) => false);\n        countryInfo.update((c) => {});\n        setCountryImageBack(scene);\n        onCountryHoverOff(scene);\n    }\n\n    const handleInfoClick = () => {\n        isDataPanelActive.update(() => true)\n    }\n\n    const handleClose = () => {\n        isCountryClicked.update((c) => false);\n        countryInfo.update((c) => {});\n        onCountryHoverOff(scene);\n    }\n    \n    const resetScene = () => {\n        const container = document.getElementById(\"three-container\");\n\n        cancelAnimationFrame(animate);\n        emptyScene(container);\n\n        overlay.update((o) => null);\n\n        camera = null;\n        cloud = null;\n        earth = null;\n        root = null;\n        renderer = null;\n        scene = null;\n    }\n\n    const removeListeners = () => {\n        $listeners.forEach((listener) => {\n            document.removeEventListener(listener.type, listener.function)\n        });\n    }\n\n    const onWindowResize = debounce(() => {\n        resetScene();\n        removeListeners();\n        init();\n    }, 500);\n</script>\n\n<svelte:head>\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;600&display=swap\" rel=\"stylesheet\">\n</svelte:head>\n\n<main>\n    <p on:click={handleInfoClick} class=\"info-link\">About</p>\n\n    {#if !$isCountryHovered && !$isCountryClicked && totals}\n        <IntroInfo totals={totals} />\n    {/if}\n\n    {#if $isDataPanelActive}\n        <DataSourceInfo />\n    {/if}\n\n    {#if $isCountryClicked}\n        <FullCountryStatistics countries={countries} handleClose={handleClose} />\n    {/if}\n\n    {#if $isCountryHovered}\n        <ShortCountryStatistics countries={countries} />\n    {/if}\n\n    <div class=\"container\" class:active=\"{$isCountryClicked}\" id=\"three-container\"></div>\n</main>\n\n<style type=\"text/scss\">:global(body) {\n  cursor: grab;\n  font-family: 'Montserrat', sans-serif;\n  margin: 0;\n  padding: 0; }\n\n:global(body.pointer) {\n  cursor: pointer !important; }\n\nmain {\n  background-color: #000000;\n  height: 100%;\n  width: 100%; }\n\np {\n  margin: 0; }\n\n.back-button {\n  color: #fff;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  transition: letter-spacing 250ms ease; }\n\n.back-button__arrow {\n  background-color: #ffffff;\n  margin-right: 12px;\n  position: relative;\n  height: 2px;\n  width: 20px;\n  transition: margin-right 250ms ease; }\n  .back-button__arrow::before {\n    background-color: #ffffff;\n    content: \"\";\n    height: 2px;\n    width: 10px;\n    top: -3px;\n    left: -2px;\n    position: absolute;\n    transform: rotate(-45deg); }\n  .back-button__arrow::after {\n    background-color: #ffffff;\n    content: \"\";\n    height: 2px;\n    width: 10px;\n    left: -2px;\n    top: 3px;\n    position: absolute;\n    transform: rotate(45deg); }\n\n.back-button__wrapper {\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  z-index: 2; }\n  .back-button__wrapper:hover .back-button__arrow {\n    margin-right: 15px; }\n  .back-button__wrapper:hover .back-button {\n    letter-spacing: 3px; }\n\n.container {\n  position: absolute;\n  right: 0;\n  height: 100%;\n  width: 85%;\n  /* transition: transform 500ms ease; */\n  /* transform: translateX(15%); */\n  z-index: 0; }\n\n/* .container.active {\n        transform: translateX(20%);\n    } */\n.country-name {\n  color: #ffffff;\n  font-size: 2rem;\n  font-weight: 300;\n  letter-spacing: 1px;\n  line-height: 1.2;\n  margin: 0;\n  position: absolute;\n  left: 15px;\n  top: 60px;\n  transition: top 300ms ease;\n  z-index: 2; }\n\n.info-link {\n  color: #666464;\n  cursor: pointer;\n  position: absolute;\n  right: 20px;\n  bottom: 40px;\n  text-shadow: 0px 0px 1px transparent;\n  transition: all 300ms ease;\n  z-index: 3; }\n  .info-link:hover {\n    color: #ffffff;\n    text-shadow: 0px 0px 1px #ffffff; }\n</style>\n",
    "<script>\n    import { fade } from \"svelte/transition\";\n    import { isDataPanelActive } from \"../stores/dataPanel.js\"\n\n    const handleClose = () => {\n        isDataPanelActive.update(() => false)\n    }\n</script>\n\n<div class=\"wrapper\" transition:fade>\n    <!-- <h2 class=\"heading\">Data Source Information</h2> -->\n    <a on:click={handleClose} href=\"javascript:;\" class=\"close-button\" />\n\n    <aside class=\"data-sources\">\n        <h2 class=\"data-sources__heading\">About COVID-19 Tracker</h2>\n        <p class=\"data-sources__answer\">\n            This project is intended to help provide visibility into the status of each country with regards to the COVID-19 pandemic.\n            The 3D interactive world map is built with the Three.js Javascript library, with help from the D3.js library performing computations\n            to figure out which country is being interacted with. The whole project is built in the Svelte Javascript framework and is partially\n            an exercise to gain more experience with this framework.\n        </p>\n\n        <h3 class=\"data-sources__question\">Sources</h3>\n        <ul class=\"data-sources__list\">\n            <li class=\"data-sources__list-item\">\n                John Hopkins CSSE\n            </li>\n            <li class=\"data-sources__list-item\">\n                CDC\n            </li>\n            <li class=\"data-sources__list-item\">\n                WHO\n            </li>\n        </ul>\n\n        <h3 class=\"data-sources__question\">How up to date is the data?</h3>\n        <p class=\"data-sources__answer\">\n            Each country updates their official report data differently. Some countries update every hour, while other countries update every day. It can be assumed that each countries statistics are up to date for a given day.\n        </p>\n\n        <h3 class=\"data-sources__question\">How are percentages computed?</h3>\n        <p class=\"data-sources__answer\">\n            There are a number of different percentages displayed, and they are computed as follows:\n        </p>\n\n        <ul class=\"data-sources__list\">\n            <li class=\"data-sources__list-item\">\n                <span class=\"data-sources__metric\">Percentage of population infected: </span>\n                (confirmed cases / population) * 100\n            </li>\n            <li class=\"data-sources__list-item\">\n                <span class=\"data-sources__metric\">Average death rate: </span>\n                (deaths / confirmed cases) * 100\n            </li>\n            <li class=\"data-sources__list-item\">\n                <span class=\"data-sources__metric\">Active cases: </span>\n                confirmed cases - (deaths + recovered)\n            </li>\n        </ul>\n    </aside>\n</div>\n\n<style type=\"text/scss\">.wrapper {\n  background-color: #000000;\n  cursor: initial;\n  overflow: scroll;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: 3; }\n\n.heading {\n  color: #ffffff;\n  font-size: 3rem;\n  margin: 25px 0 0;\n  text-align: center; }\n\n.close-button {\n  cursor: pointer;\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  height: 30px;\n  width: 30px; }\n  .close-button::before, .close-button::after {\n    background-color: #ffffff;\n    content: \"\";\n    height: 1px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%) rotate(45deg);\n    transition: width 300ms ease;\n    width: 35px; }\n  .close-button::after {\n    transform: translate(-50%, -50%) rotate(-45deg); }\n  .close-button:hover::before, .close-button:hover::after {\n    width: 40px; }\n\n.data-sources {\n  color: #ffffff;\n  padding: 20px;\n  width: 60%; }\n  .data-sources__heading {\n    font-size: 2rem;\n    font-weight: 300;\n    margin-bottom: 30px; }\n  .data-sources__question {\n    font-size: 2rem;\n    margin: 40px 0 20px; }\n  .data-sources__answer {\n    font-size: 1.3rem;\n    font-weight: 300;\n    line-height: 1.5; }\n  .data-sources__list {\n    padding: 0; }\n  .data-sources__list-item {\n    font-size: 1.4rem;\n    line-height: 1.4;\n    list-style: none;\n    margin-bottom: 10px;\n    padding-left: 30px;\n    position: relative; }\n    .data-sources__list-item::before {\n      background-color: gray;\n      border-radius: 50%;\n      content: \"\";\n      height: 15px;\n      width: 15px;\n      position: absolute;\n      left: 0px;\n      top: 50%;\n      transform: translateY(-50%); }\n  .data-sources__metric {\n    color: #fff;\n    font-size: 1.1rem; }\n</style>\n",
    "<script>\n    import { fly } from \"svelte/transition\";\n    import { country, countryInfo, isCountryClicked, isCountryHovered } from \"../stores/country.js\";\n    import { isDataPanelActive } from \"../stores/dataPanel.js\"\n    import { abbreviateNumber } from \"../utils/formatUtils.js\";\n    import { setCountryImageBack } from \"../utils/utils.js\";\n    import { onCountryHoverOff } from \"../globeEventHandlers/globeMouseMove\";\n\n    const getCountryCovidStats = (countryData, property) => {\n        if (countryData && countries && countries.length > 0) {\n            const country = countries.find((country) => countryData.countryCode === country.code);\n            return country && country[property] ? country[property] : \"\";\n        }\n\n        return \"\";\n    };\n\n    const getCountryInformation = (countryInfo, property) => {\n        if (countryInfo) return countryInfo[property];\n\n        return null;\n    };\n\n    export let handleClose;\n    export let countries;\n</script>\n\n<aside class=\"country-data\" transition:fly=\"{{ x: -200, duration: 1000 }}\">\n    <a on:click={handleClose} href=\"javascript:;\" class=\"close-button\" />\n    \n    <h2 class=\"country-data--country\">{ getCountryCovidStats($country, \"country\") }</h2>\n\n    {#if getCountryCovidStats($country, \"confirmed\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Total confirmed cases</p>\n        <p class=\"country-data--metric\">{abbreviateNumber(getCountryCovidStats($country, \"confirmed\"), 0)}</p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"confirmed\") && getCountryCovidStats($country, \"recovered\") &&\n    getCountryCovidStats($country, \"deaths\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Active cases</p>\n        <p class=\"country-data--metric\">\n            { getCountryCovidStats($country, \"confirmed\") - (getCountryCovidStats($country, \"recovered\") +\n            getCountryCovidStats($country, \"deaths\")) >= 0 ? abbreviateNumber(getCountryCovidStats($country,\n            \"confirmed\") - (getCountryCovidStats($country, \"recovered\") + getCountryCovidStats($country, \"deaths\")), 0)\n            : 0 }\n        </p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"critical\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Critical cases</p>\n        <p class=\"country-data--metric\">{abbreviateNumber(getCountryCovidStats($country, \"critical\"), 0)}</p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"deaths\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Deaths</p>\n        <p class=\"country-data--metric\">{abbreviateNumber(getCountryCovidStats($country, \"deaths\"), 0)}</p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"recovered\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Recovered</p>\n        <p class=\"country-data--metric\">{abbreviateNumber(getCountryCovidStats($country, \"recovered\"), 0)}</p>\n    </div>\n    {/if} {#if getCountryInformation($countryInfo, \"population\") && getCountryCovidStats($country, \"confirmed\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Percentage infected</p>\n        <p class=\"country-data--metric\">\n            { Number( (getCountryCovidStats($country, \"confirmed\") / getCountryInformation($countryInfo, \"population\"))\n            * 100 ).toFixed(2) }%\n        </p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"deaths\") && getCountryCovidStats($country, \"confirmed\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Average death rate</p>\n        <p class=\"country-data--metric\">\n            { Number(( getCountryCovidStats($country, \"deaths\") / getCountryCovidStats($country, \"confirmed\") ) *\n            100).toFixed(2) }%\n        </p>\n    </div>\n    {/if}\n</aside>\n\n<style type=\"text/scss\">.country-data {\n  background: rgba(80, 80, 80, 0.3);\n  border-radius: 14px;\n  max-width: 500px;\n  cursor: initial;\n  font-size: 2rem;\n  justify-content: center;\n  height: calc(100% - 80px);\n  padding: 25px 20px;\n  position: absolute;\n  left: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 2; }\n  .country-data--category, .country-data--metric {\n    margin: 0; }\n  .country-data--country {\n    font-size: 2rem;\n    font-weight: 300;\n    margin: 0 0 30px;\n    color: #fff; }\n  .country-data--wrapper {\n    align-items: center;\n    display: inline-block;\n    color: #ffffff;\n    margin-bottom: 15px;\n    margin-right: 10px;\n    width: calc(50% - 15px); }\n  .country-data--category {\n    color: #ffffff;\n    font-size: 1.1rem;\n    font-weight: 300; }\n  .country-data--metric {\n    font-size: 4rem;\n    font-weight: 100;\n    margin-bottom: 5px; }\n\n.close-button {\n  background: #aaaaaa;\n  border-radius: 50%;\n  cursor: pointer;\n  position: absolute;\n  right: -12.5px;\n  top: 50px;\n  transition: background-color 300ms ease;\n  height: 25px;\n  width: 25px; }\n  .close-button::before, .close-button::after {\n    background-color: #ffffff;\n    content: \"\";\n    height: 1px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%) rotate(45deg);\n    transition: background-color 300ms ease;\n    width: 16px; }\n  .close-button::after {\n    transform: translate(-50%, -50%) rotate(-45deg); }\n  .close-button:hover {\n    background-color: #ffffff; }\n    .close-button:hover::before, .close-button:hover::after {\n      background-color: #000000; }\n\n/* @media (min-width: 1068px) {\n        .country-data.active .country-data--wrapper {\n            font-size: 28px;\n        }\n\n        .country-data.active .country-data--category {\n            font-size: 22px;\n        }\n    }\n\n    @media (min-width: 1400px) {\n        .country-data.active .country-data--wrapper {\n            font-size: 32px;\n        }\n\n        .country-data.active .country-data--category {\n            font-size: 26px;\n        }\n    } */\n</style>\n",
    "<script>\n    import { fly } from \"svelte/transition\";\n    import { country, countryInfo, isCountryClicked, isCountryHovered } from \"../stores/country.js\";\n    import { abbreviateNumber } from \"../utils/formatUtils.js\";\n\n    export let totals;\n</script>\n\n<aside class=\"intro\" in:fly=\"{{ x: -200, duration: 750, delay: 500 }}\">\n    <p class=\"intro--title\">COVID-19 has claimed the lives of</p>\n    <p class=\"intro--total\">{abbreviateNumber(totals[0].deaths, 2)}</p>\n    <p class=\"intro--title\">people worldwide.</p>\n    <p class=\"intro--description\">\n        Explore and track information about COVID-19 cases in each country around the world.\n    </p>\n</aside>\n\n<style type=\"text/scss\">.intro {\n  cursor: initial;\n  position: absolute;\n  left: 15px;\n  top: 50px;\n  width: 275px;\n  z-index: 2; }\n  .intro--description {\n    color: #ffffff;\n    font-size: 1.1rem;\n    line-height: 1.4; }\n  .intro--title {\n    color: #ffffff;\n    font-size: 1.6rem;\n    font-weight: 300;\n    line-height: 1.4;\n    margin-bottom: 5px;\n    margin-top: 0; }\n  .intro--total {\n    color: #ffffff;\n    font-size: 7rem;\n    font-weight: 100;\n    margin-bottom: 5px;\n    margin-top: 0;\n    text-transform: uppercase; }\n</style>\n",
    "<script>\n    import { fly } from \"svelte/transition\";\n    import { country, countryInfo, isCountryClicked, isCountryHovered } from \"../stores/country.js\";\n    import { abbreviateNumber } from \"../utils/formatUtils.js\";\n\n    const getCountryCovidStats = (countryData, property) => {\n        if (countryData && countries && countries.length > 0) {\n            const country = countries.find((country) => countryData.countryCode === country.code);\n            return country && country[property] ? country[property] : \"\";\n        }\n\n        return \"\";\n    };\n\n    const getCountryInformation = (countryInfo, property) => {\n        if (countryInfo) return countryInfo[property];\n\n        return null;\n    };\n\n    export let countries;\n</script>\n\n<aside class=\"country-data\">\n    <h2 class=\"country-data--country\">{ getCountryCovidStats($country, \"country\") }</h2>\n\n    {#if getCountryCovidStats($country, \"confirmed\") && getCountryCovidStats($country, \"recovered\") &&\n    getCountryCovidStats($country, \"deaths\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Active cases</p>\n        <p class=\"country-data--metric\">\n            { getCountryCovidStats($country, \"confirmed\") - (getCountryCovidStats($country, \"recovered\") +\n            getCountryCovidStats($country, \"deaths\")) >= 0 ? abbreviateNumber(getCountryCovidStats($country,\n            \"confirmed\") - (getCountryCovidStats($country, \"recovered\") + getCountryCovidStats($country, \"deaths\")), 0)\n            : 0 }\n        </p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"critical\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Critical cases</p>\n        <p class=\"country-data--metric\">{abbreviateNumber(getCountryCovidStats($country, \"critical\"), 0)}</p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"deaths\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Deaths</p>\n\n        <p class=\"country-data--metric\">{abbreviateNumber(getCountryCovidStats($country, \"deaths\"), 0)}</p>\n    </div>\n    {/if} {#if getCountryCovidStats($country, \"recovered\")}\n    <div class=\"country-data--wrapper\">\n        <p class=\"country-data--category\">Recovered</p>\n        <p class=\"country-data--metric\">{abbreviateNumber(getCountryCovidStats($country, \"recovered\"), 0)}</p>\n    </div>\n    {/if}\n</aside>\n\n<style type=\"text/scss\">.country-data {\n  cursor: initial;\n  position: absolute;\n  left: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 2; }\n  .country-data--country {\n    font-size: 2rem;\n    font-weight: 300;\n    margin: 0 0 30px;\n    color: #fff; }\n  .country-data--category {\n    color: #ffffff;\n    font-size: 1.1rem;\n    font-weight: 300;\n    margin-bottom: 5px; }\n  .country-data--metric {\n    color: #ffffff;\n    font-size: 4rem;\n    font-weight: 100;\n    margin-bottom: 5px;\n    margin-top: 0; }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}